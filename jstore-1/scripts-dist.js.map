{"version":3,"sources":["scripts.js"],"names":["mutationNode","document","getElementsByTagName","mutationConfig","attributes","childList","subtree","mutationCallback","mutationsList","observer","mutation","type","initation","setTimeout","MutationObserver","pageBody","featureImageCardSet","featureImageWrapSet","featureImageSet","activeFeatureImage","renderFeatureImage","searchTrigger","searchServed","hamburger","hamburgerServed","singleHamburger","shamburgerServed","announceBar","announceBarServed","awkwardLoad","clickServe","element","trigger","callback","addEventListener","loadServe","elements","componentParse","reinit","disconnect","observe","querySelector","shamburgerSelector","nav","createElement","setAttribute","classList","add","prepend","searchClick","hamburgerTrigger","shamburgerTrigger","querySelectorAll","announceBarShow","i","length","push","firstChild","undefined","footer_links","n","link_text","textContent","includes","replace","Element","contains","body","remove","bodyTemp","cfgTemp","bodyClass","multiString","string","times","bars","announceItems","announceLabel","announceLink","announceSlides","announceText","marqueeMarkup","innerHTML","transformFeatureImage","offsetTop","getBoundingClientRect","top","offsetScreen","window","innerHeight","progress","wrapTop","style","requestAnimationFrame","trackFeatureImage","nudge","overScreen","offsetHeight","cancelAnimationFrame","searchModal","searchInput","e","searchKeywords","value","trim","noResult"],"mappings":"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","sourcesContent":["// Mutation object creation\nlet mutationNode     = document.getElementsByTagName('TITLE')[0]\nconst mutationConfig = { attributes: true, childList: true, subtree: true }\n\n// Callback function to execute when mutations are observed\nconst mutationCallback = function(mutationsList, observer) {\n  // Use traditional 'for loops' for IE 11\n  for(let mutation of mutationsList) {\n    if (mutation.type === 'childList') {\n      //console.log('A child node has been added or removed.');\n      initation(true)\n      setTimeout(initation, 2000)\n    }\n    else if (mutation.type === 'attributes') {\n      //console.log('The ' + mutation.attributeName + ' attribute was modified.');\n    }\n  }\n};\n\n// Create an observer instance linked to the callback function\nconst observer = new MutationObserver(mutationCallback);\n// Dynamic components\nlet pageBody = false\nlet featureImageCardSet = []\nlet featureImageWrapSet = []\nlet featureImageSet     = []\nlet activeFeatureImage  = []\nlet renderFeatureImage  = []\nlet searchTrigger       = false\nlet searchServed        = false\nlet hamburger           = false\nlet hamburgerServed     = false\nlet singleHamburger     = false\nlet shamburgerServed    = false\nlet announceBar         = false\nlet announceBarServed   = false\nlet awkwardLoad         = false\n\nconst clickServe = (element, trigger, callback) => {\n  if (element) {\n    if (trigger == false) {\n      element.addEventListener(\"click\", callback)\n      return true\n    } else {\n      return true\n    }\n  }\n  return false\n}\nconst loadServe = (elements, trigger, callback) => {\n  if (elements) {\n    if (trigger == false) {\n      return callback(elements)\n    } else {\n      return true\n    }\n  }\n  return false\n}\n\nconst componentParse = (reinit) => {\n  if (awkwardLoad) {\n    mutationNode = document.getElementsByTagName('TITLE')[0]\n    if (mutationNode) {\n      observer.disconnect()\n      observer.observe(mutationNode, mutationConfig)\n      awkwardLoad = false\n    } else {\n      awkwardLoad = true\n    }\n  }\n  // Universal components\n  pageBody = document.querySelector(\".default-layout > main.main-content\") || false\n  // pageBody  = storeBody.firstChild\n\n  let shamburgerSelector = \"header.header .main-nav-wrapper .nav a.hamburger\"\n  let nav = document.querySelector(\"header.header .main-nav-wrapper .nav\")\n  if (nav) {\n    if (!document.querySelector(shamburgerSelector)) {\n      singleHamburger = document.createElement(\"A\")\n      singleHamburger.setAttribute(\"href\", \"javascript:;\")\n      singleHamburger.classList.add(\"hamburger\")\n      nav.prepend(singleHamburger)\n    }\n  }\n\n  searchTrigger       = document.querySelector('header.header-mobile .header-wrap a.search-icon')\n  hamburger           = document.querySelector(\"header.header-mobile label.mobile-nav\")\n  searchServed        = clickServe(searchTrigger, searchServed, searchClick)\n  hamburgerServed     = clickServe(hamburger, hamburgerServed, hamburgerTrigger)\n  shamburgerServed    = clickServe(singleHamburger, shamburgerServed, shamburgerTrigger)\n  announceBar         = document.querySelectorAll(\"header .promo_banner\")\n  announceBarServed   = loadServe(announceBar, announceBarServed, announceBarShow)\n\n  featureImageWrapSet = []\n  featureImageSet     = []\n  activeFeatureImage  = []\n  renderFeatureImage  = []\n  featureImageCardSet = document.querySelectorAll(\".feature-set-content-wrap .feature-image.grid\")\n  for (let i = 0; i < featureImageCardSet.length; i++) {\n    // let imageWrap = featureImageCardSet[i].firstChild\n    featureImageWrapSet.push(featureImageCardSet[i].firstChild)\n    featureImageSet.push(featureImageCardSet[i].firstChild.querySelector('img'))\n    activeFeatureImage.push(false)\n    renderFeatureImage.push(undefined)\n  }\n\n  let footer_links = document.querySelectorAll('.footer_link a[href*=\"/policies/\"]')\n  for (let n = 0; n<footer_links.length; n++) {\n    let link_text = footer_links[n].textContent\n\n    if (link_text.includes(\" policy\")) {\n      footer_links[n].setAttribute(\"replace-text\", link_text.replace(\" policy\", \"\"))\n    }\n  }\n  \n  if (pageBody instanceof Element) {\n    if (pageBody.firstChild) {\n      if (pageBody.firstChild.classList.contains(\"product-template\")) {\n        if (!document.body.classList.contains(\"product-details-page\")) document.body.classList.add(\"product-details-page\")\n      } else {\n        if (document.body.classList.contains(\"product-details-page\")) document.body.classList.remove(\"product-details-page\")\n      }\n    } else {\n      if (document.body.classList.contains(\"product-details-page\")) document.body.classList.remove(\"product-details-page\")\n    }\n  }\n}\n\n// Initation process\nconst initation = (reinit=false) => {\n  componentParse(reinit)\n}\n\n// Begin detect page changes\nif (mutationNode) {\n  observer.observe(mutationNode, mutationConfig)\n} else {\n  // Initation on page loaded\n  awkwardLoad  = true\n  let bodyTemp = document.querySelector(\"#app\")\n  let cfgTemp  = { attributes: true, childList: true, subtree: false }\n  observer.observe(bodyTemp, cfgTemp)\n}\n\n// Static components\nconst hamburgerTrigger = () => {\n  let bodyClass = document.body.classList\n  if (bodyClass.contains(\"is-noscroll\")) {\n    if (!bodyClass.contains(\"nav-active\")) bodyClass.add(\"nav-active\")\n  } else {\n    if (bodyClass.contains(\"nav-active\")) bodyClass.remove(\"nav-active\")\n  }\n}\n\nconst shamburgerTrigger = () => {\n  let bodyClass = document.body.classList\n  if (!bodyClass.contains(\"nav-active\")) {\n    bodyClass.add(\"nav-active\")\n    if (!bodyClass.contains(\"is-noscroll\")) bodyClass.add(\"is-noscroll\")\n  } else {\n    bodyClass.remove(\"nav-active\")\n    if (bodyClass.contains(\"is-noscroll\")) bodyClass.remove(\"is-noscroll\")\n  }\n}\n\nconst multiString = ( string, times = 1 ) => {\n  if (times > 0) {\n    return string + multiString( string, times-1 )\n  } else {\n    return \"\"\n  }\n}\n\nconst announceBarShow = (bars) => {\n  for (let i = 0; i < bars.length; i++) {\n    let announceItems = bars[i].querySelectorAll('p')\n    let announceLabel = bars[i].querySelector('p[style=\"text-align: left;\"]:first-child')\n    let announceLink = bars[i].querySelector('p[style=\"text-align: right;\"]:last-child a')\n    let announceSlides = bars[i].querySelectorAll('p[style=\"text-align: center;\"]')\n\n    // if (announceSlides.length == announceItems.length && announceItems.length > 0) {\n    //   bars[i].classList.add('slide-promo--wrap')\n    // }\n\n    if (announceLabel && announceLink) {\n      let announceText = announceLabel.textContent\n      let marqueeMarkup = \"<span>\" + announceText + \"</span>\"\n      announceLabel.innerHTML = multiString(marqueeMarkup, 6)\n      announceLabel.classList.add('marquee-promo')\n    }\n    // if (announceLink) console.log(announceLink.textContent)\n  }\n  if (bars) {\n    if (bars.length > 0) return true\n  }\n  return false\n}\n\n// Dynamic methods\n\nlet transformFeatureImage = (i) => {\n  let offsetTop    = featureImageCardSet[i].getBoundingClientRect().top\n  let offsetScreen = (offsetTop - window.innerHeight) * -1\n\n  let progress   = offsetScreen / (window.innerHeight)\n  let wrapTop    = featureImageWrapSet[i].offsetTop * -1\n  featureImageSet[i].style[\"transform\"] = \"translate(0,\" + (progress * wrapTop) + \"px)\"\n  renderFeatureImage[i] = requestAnimationFrame(() => {\n    transformFeatureImage(i)\n  })\n}\n\nlet trackFeatureImage = () => {\n  for (let i = 0; i < featureImageCardSet.length; i++) {\n    if (featureImageSet[i]) {\n      let offsetScreen = (featureImageCardSet[i].getBoundingClientRect().top - window.innerHeight) * -1\n      let nudge        = 200\n      let overScreen   = offsetScreen - featureImageCardSet[i].offsetHeight - nudge\n\n      if (offsetScreen > nudge*-1 && overScreen < window.innerHeight) {\n        if (activeFeatureImage[i] == false) {\n          activeFeatureImage[i] = true\n          renderFeatureImage[i] = requestAnimationFrame(() => {\n            transformFeatureImage(i)\n          })\n        }\n      } else {\n        if (activeFeatureImage[i] == true) {\n          activeFeatureImage[i] = false\n          cancelAnimationFrame(renderFeatureImage[i])\n        }\n      }\n    }\n  }\n}\n\nconst searchClick = () => {\n  setTimeout( () => {\n    let searchModal = document.querySelector('.header-section .search-modal')\n    let searchInput = document.querySelector('.header-section .search-modal__header .search-group input')\n    if (searchInput) {\n      // console.log(searchInput)\n      if (searchInput.classList.contains(\"empty\")) {\n        if (!searchModal.classList.contains(\"empty_input\")) searchModal.classList.add(\"empty_input\")\n      }\n      // let searchTimeout = false\n      searchInput.addEventListener(\"input\", (e) => {\n        let searchKeywords = searchInput.value.trim()\n        let noResult       = searchModal.querySelector(\".search-modal__no-result\")\n        // clearTimeout(searchTimeout)\n        // if (!searchModal.classList.contains(\"inputing\")) searchModal.classList.add(\"inputing\")\n        if (noResult) {\n          if (!noResult.classList.contains(\"inputing\")) noResult.classList.add(\"inputing\")\n        }\n        if (searchKeywords.length == 0 || searchKeywords == \"\") {\n          if (!searchModal.classList.contains(\"empty_input\")) searchModal.classList.add(\"empty_input\")\n        } else {\n          if (searchModal.classList.contains(\"empty_input\")) searchModal.classList.remove(\"empty_input\")\n        }\n      })\n    }\n  },150)\n}\n\ndocument.addEventListener(\"scroll\", () => {\n\n  trackFeatureImage()\n\n})"]}